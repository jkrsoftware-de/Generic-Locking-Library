###### 🌏 ###### 💬 ######
# All my public-accessible Software-Content aren't underlying any Software-License. It's Free-Software.
# You can use my Code as you want — my only Wish is: mark me as Original-Creator of your Derivation. But you mustn't. :)
#
# My Intention of creating/publishing Free-Software is to help our Public Society.
# In this particular Case our newly-created "Computer-World". I mean everything regarding complex IT-Systems.
#
# made for jkrsoftware.de as Versioning- and Deployment-System.
# made with ❤ by Jeremy Krüger (jkr.one). 😊
###### 🌏 ###### 💬 ######

# Gitlab-CI Configuration for the Generic-"Locking Library".
image: docker:latest
services:
  - docker:dind

## The (configured) Pipeline-Stages.
stages:
  - build-stage
  - version-creation-stage
  - version-deployment-stage-manual-approval
  - version-deployment-stage

## Global Variable for every Pipeline.
variables:
  DOCKER_TLS_CERTDIR: ''
  DOCKER_DRIVER: overlay2
  SPRING_PROFILES_ACTIVE: gitlab-ci

## Pipeline Jobs

### Standard Maven-Build.
Maven (Build):
  stage: build-stage
  image: maven:3.8-openjdk-11-slim
  allow_failure: false
  cache:
    paths:
      - '.m2/'
  script: "mvn clean package -B"

### Standard Maven-Test.
Maven (Run Tests):
  stage: build-stage
  image: maven:3.8-openjdk-11-slim
  allow_failure: false
  cache:
    paths:
      - '.m2/'
  script: "mvn clean test verify"

### Version-Creation.
create new Version:
  stage: version-creation-stage
  image: maven:3.8-openjdk-11-slim
  allow_failure: false
  when: manual
  only:
    - /^main$/
  script:
    - apt update -y && apt install git -y
    - common-versioning-and-deployment-system/create-new-version.sh

### Manual-Approval for Version-Deployment.
deploy current Version:
  stage: version-deployment-stage-manual-approval
  image: alpine:latest
  allow_failure: false
  when: manual
  only:
    - /^release$/
  script:
    - echo "Deployment (of the current Version) has been triggered."

### Version-Deployment (GitHub).
deploy to GitLab:
  stage: version-deployment-stage
  image: maven:3.8-openjdk-11-slim
  allow_failure: false
  when: manual
  only:
    - /^main$/
  script:
    - apt update -y && apt install git -y
    - common-versioning-and-deployment-system/deploy-new-version.sh "GITHUB"